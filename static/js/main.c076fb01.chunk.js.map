{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["AppForm","state","userfirstname","userlastname","useremail","rules","message","errors","user","messages","user_incorrect","useremail_incorrect","rules_incorrect","handleChange","e","type","target","id","setState","value","handleValidation","correct","length","includes","handleSubmit","preventDefault","valid","setTimeout","className","onSubmit","this","noValidate","htmlFor","name","title","onChange","checked","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.c076fb01.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Form.css'\n\nclass AppForm extends Component {\n    state = {\n        userfirstname: '',\n        userlastname: '',\n        useremail: '',\n        rules: false,\n        message: \"\",\n\n        errors: {\n            user: false,\n            useremail: false,\n            rules: false\n         }\n     }\n\n     messages = {\n        user_incorrect: \"! Imie i nazwisko musi zawierać minimum po 3 znaki i nie zawierać spacji\",\n        useremail_incorrect: \"! adres e-mail musi składać się z @ i domeny dostawcy usług e-mail\",\n        rules_incorrect: \"! Musisz zaakceptować regulami\"\n     }\n\n\n\n     handleChange = (e) => {\n        let type = e.target.id\n        if(type === \"rules\") {\n            this.setState({\n                [type]: !this.state.rules\n            })\n        }\n        else {\n        this.setState({\n            [type]: e.target.value\n        })\n     }}\n\n     handleValidation = () => {\n        let user = true;\n        let useremail = true;\n        let rules = true;\n        let correct = false;\n\n        if((this.state.userfirstname.length >= 3 && !this.state.userfirstname.includes(' ')) && (this.state.userlastname.length >= 3 && !this.state.userlastname.includes(' '))) {\n            user = false\n        }\n\n        if(this.state.useremail.includes(\"@\") && this.state.useremail.includes(\".\")) {useremail = false}\n        if(this.state.rules === true) {rules = false}\n        if(!user && !useremail && !rules) {correct = true}\n        return ({\n            user,\n            useremail,\n            rules,\n            correct\n        })\n     }\n\n\n     handleSubmit = (e) => {\n        e.preventDefault()\n        const valid = this.handleValidation();\n        if(valid.correct){\n            this.setState({\n                userfirstname: '',\n                userlastname: '',\n                useremail: '',\n                rules: false,\n                message: \"Dane zostały wysłane!\",\n\n                errors: {\n                    user: false,\n                    useremail: false,\n                    rules: false\n                 }\n            })\n            setTimeout(()=>{this.setState({message: \"\"})}, 1000)\n        }\n        else {this.setState({\n            errors: {\n                user: valid.user,\n                useremail: valid.useremail,\n                rules: valid.rules\n             }\n        })}\n    }\n\n\n    render() {\n        return (\n            <section className=\"formBox\">\n                <form onSubmit={this.handleSubmit} className=\"form\" noValidate>\n                    <label htmlFor=\"userfirstname\">Imię:</label>\n                    <input type=\"text\" id=\"userfirstname\" name=\"username\" title=\"Imie i nazwisko musi zawierać minimum po 3 znaki i nie zawierać spacji!\" value={this.state.userfirstname} onChange={this.handleChange}/>\n                    <label htmlFor=\"userlastname\">Nazwisko:</label>\n                    <input type=\"text\" id=\"userlastname\" name=\"username\" title=\"Imie i nazwisko musi zawierać minimum po 3 znaki i nie zawierać spacji!\" value={this.state.userlastname} onChange={this.handleChange}/>\n                    <label htmlFor=\"useremail\">E-mail:</label>\n                    <input type=\"email\" id=\"useremail\" name=\"username\" title=\"adres e-mail musi składać się z @ i domeny dostawcy usług e-mail!\" value={this.state.useremail} onChange={this.handleChange}/>\n                    <label><input type=\"checkbox\" id=\"rules\" name=\"rules\" title=\"akceptacja regulaminu jest wymagana\" checked={this.state.rules} onChange={this.handleChange}/> Akceptuje regulamin </label>\n                    <div className=\"errorSection\">\n                    {this.state.errors.user ? <p>{this.messages.user_incorrect}</p> : null}\n                    {this.state.errors.useremail ? <p>{this.messages.useremail_incorrect}</p> : null}\n                    {this.state.errors.rules ? <p>{this.messages.rules_incorrect}</p> : null}\n                    </div>\n                    <section><span>{this.state.message}</span><button type=\"submit\">Wyślij</button></section>\n                </form>\n            </section>\n         );\n    }\n}\n\nexport default AppForm;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}